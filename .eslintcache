[{"/Users/jameskim/Documents/GitHub/Coinlens/src/index.js":"1","/Users/jameskim/Documents/GitHub/Coinlens/src/App.js":"2","/Users/jameskim/Documents/GitHub/Coinlens/src/routes/About.js":"3","/Users/jameskim/Documents/GitHub/Coinlens/src/routes/CoinDetail.js":"4","/Users/jameskim/Documents/GitHub/Coinlens/src/components/Coins.js":"5","/Users/jameskim/Documents/GitHub/Coinlens/src/routes/HomeSearch.js":"6","/Users/jameskim/Documents/GitHub/Coinlens/src/components/RenderHome.js":"7","/Users/jameskim/Documents/GitHub/Coinlens/src/components/Background.js":"8","/Users/jameskim/Documents/GitHub/Coinlens/src/components/Navigation.js":"9"},{"size":228,"mtime":1610435679816,"results":"10","hashOfConfig":"11"},{"size":1429,"mtime":1610952935002,"results":"12","hashOfConfig":"11"},{"size":804,"mtime":1610258416206,"results":"13","hashOfConfig":"11"},{"size":5473,"mtime":1611053956741,"results":"14","hashOfConfig":"11"},{"size":4941,"mtime":1611028718225,"results":"15","hashOfConfig":"11"},{"size":2234,"mtime":1610458799851,"results":"16","hashOfConfig":"11"},{"size":2949,"mtime":1610960932409,"results":"17","hashOfConfig":"11"},{"size":607,"mtime":1610381057152,"results":"18","hashOfConfig":"11"},{"size":3920,"mtime":1610953812839,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"15868xt",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/jameskim/Documents/GitHub/Coinlens/src/index.js",[],["42","43"],"/Users/jameskim/Documents/GitHub/Coinlens/src/App.js",["44"],"import React from 'react'\nimport { BrowserRouter, Route} from 'react-router-dom'\nimport About from \"./routes/About\";\nimport CoinDetail from \"./routes/CoinDetail\";\nimport Navigation from \"./components/Navigation\";\nimport HomeSearch from './routes/HomeSearch';\nimport './App.css'\nimport styled from \"styled-components\"\nimport bg from './assets/bg.jpg'\n\nfunction App() {\n    return (\n        <Container>\n            <Wrapper>\n                <Navigation/>\n            <BrowserRouter>\n                \n                <Route path='/' exact={true} component={HomeSearch} />    \n                <Route path='/about' component={About} />\n                <Route path='/:name' component={CoinDetail} />\n            </BrowserRouter>\n            </Wrapper>\n        </Container>\n    )\n}\n\nexport default App\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(180deg, #98A9C4 4.93%, #677EA0 10.59%, #2F4C78 100%);\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n`;\nconst Wrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  /* margin: 2rem; */\n  background-color: rgba(255, 255, 255, 0.9);\n  @supports (-webkit-backdrop-filter: none) or (backdrop-filter: none) {\n    -webkit-backdrop-filter: blur(35px);\n    backdrop-filter: blur(15px);\n    background-color: rgba(136, 159, 194, 0.5);\n  }\n`;\n","/Users/jameskim/Documents/GitHub/Coinlens/src/routes/About.js",[],"/Users/jameskim/Documents/GitHub/Coinlens/src/routes/CoinDetail.js",["45","46","47","48","49"],"/Users/jameskim/Documents/GitHub/Coinlens/src/components/Coins.js",["50"],"/Users/jameskim/Documents/GitHub/Coinlens/src/routes/HomeSearch.js",["51"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport RenderHome from '../components/RenderHome'\nimport './HomeSearch.css'\nimport styled from 'styled-components'\n\nfunction SearchBar() {\n    const [items, setItems] = useState([])\n    const [value, setValue] = useState()\n    const [results, setResults] = useState([])\n\n    const fetchCoins = async() => {\n        let coinList = []\n        const data = await axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false')\n        data.data.map(coin => {\n            coinList.push(coin.name)\n        })\n        setItems(coinList)\n    }\n    useEffect(() => {\n        fetchCoins()\n    }, []) // on mount\n\n    const onChange = (e) => {\n        const value = e.target.value\n        setValue(value)\n        let results = []\n        if (value.length > 0) {\n            const regex = new RegExp(`^${value}`, 'i')\n            results = items.sort().filter(v => regex.test(v))\n        }\n        setResults(results)\n    }\n\n    return (\n        <>\n        <Hero>\n            <form>\n                <Input\n                type=\"text\"\n                className=\"search\"\n                placeholder=\"Search\"\n                onChange={onChange}\n                value={value}\n                />\n            </form>\n        </Hero>                \n        <Render>        \n            <RenderHome \n                query={results}\n            />\n        </Render>\n        </>\n    )\n}\n\nconst Hero = styled.div`\n    max-width: 1400px;\n    height: 35%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    margin: auto;\n`;\nconst Render = styled.div`\n    max-width: 1400px;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    margin: auto;\n`;\nconst Input = styled.input`\n    border-radius: 45px;\n    border: none;\n    outline: none;\n    height: 2rem;\n    width: 15rem;\n    padding: 0.15rem 1rem;\n    margin-top: 50%;\n    transition: all 0.2s ease-in;\n\n    &:hover {\n        box-shadow: 0px 17px 16px -11px rgba(47, 76, 120, 1);\n        transform: translateY(3px);\n    }\n`;\n\nexport default SearchBar\n","/Users/jameskim/Documents/GitHub/Coinlens/src/components/RenderHome.js",["52","53","54"],"import React, { useState, useEffect } from 'react'\n//import SearchPage from './Components/SearchPage.js';\nimport axios from 'axios'\nimport Coins from './Coins.js';\nimport styled from 'styled-components'\n\nconst RenderHome = ({ query }) => {\n    console.log(query)\n    const [coins, setCoins] = useState([]);\n    const [isLoading, setIsLoading] = useState(true) \n    const getCoins = async () => {\n        const data = await axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false')\n        setCoins(data)\n        setIsLoading(false)\n    }\n    console.log(coins)\n    useEffect(() => {\n        getCoins()\n    }, []) // on mount \n    const renderElement = () => {\n        if(isLoading === true) {\n            return(\n            <div className='loader'>\n                <span className='loader__text'>'Loading...'</span>\n            </div>\n            )\n        } else if (query.length > 0){\n            let queryCoins = []\n            let coinsData = coins.data\n            coinsData.map(coin => {\n                query.map(q => {\n                    if (coin.name === q) {\n                        queryCoins.push(coin)\n                    }\n                })\n            })\n            return(\n            <div className='col'>\n                {queryCoins.map(coin => (\n                    <Coins \n                        id = {coin.id}\n                        image = {coin.image} \n                        symbol = {coin.symbol}\n                        name = {coin.name}\n                        rank = {coin.market_cap_rank}\n                        price = {coin.current_price}\n                        change24h = {coin.price_change_percentage_24h}\n                        cap = {coin.market_cap}\n                        updated = {coin.last_updated}\n                    />\n                ))}    \n            </div>\n            )\n        } else {\n            return(\n            <Container className='col'>\n                {coins.data.map(coin => (\n                    <Coins \n                        id = {coin.id}\n                        image = {coin.image} \n                        symbol = {coin.symbol}\n                        name = {coin.name}\n                        rank = {coin.market_cap_rank}\n                        price = {coin.current_price}\n                        change24h = {coin.price_change_percentage_24h}\n                        cap = {coin.market_cap}\n                        updated = {coin.last_updated}\n                    />\n                ))}    \n            </Container>\n            )\n        }\n    }\n    useEffect(()=> {\n        renderElement()\n    }, [query])\n    return (\n            <>{renderElement()}</>\n    );\n}\n\nexport default RenderHome;\n\nconst Container = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    flex-wrap: wrap;\n    max-width: 1400px;\n    margin: auto;\n`;","/Users/jameskim/Documents/GitHub/Coinlens/src/components/Background.js",[],"/Users/jameskim/Documents/GitHub/Coinlens/src/components/Navigation.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":9,"column":8,"nodeType":"61","messageId":"62","endLine":9,"endColumn":10},{"ruleId":"63","severity":1,"message":"64","line":54,"column":23,"nodeType":"65","endLine":68,"endColumn":6},{"ruleId":"63","severity":1,"message":"66","line":69,"column":26,"nodeType":"67","endLine":69,"endColumn":28,"suggestions":"68"},{"ruleId":"63","severity":1,"message":"64","line":71,"column":30,"nodeType":"65","endLine":81,"endColumn":6},{"ruleId":"63","severity":1,"message":"66","line":82,"column":33,"nodeType":"67","endLine":82,"endColumn":35,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":87,"column":25,"nodeType":"72","endLine":87,"endColumn":59},{"ruleId":"70","severity":1,"message":"71","line":12,"column":29,"nodeType":"72","endLine":12,"endColumn":48},{"ruleId":"73","severity":1,"message":"74","line":15,"column":28,"nodeType":"65","messageId":"75","endLine":15,"endColumn":30},{"ruleId":"73","severity":1,"message":"74","line":30,"column":32,"nodeType":"65","messageId":"75","endLine":30,"endColumn":34},{"ruleId":"73","severity":1,"message":"74","line":31,"column":29,"nodeType":"65","messageId":"75","endLine":31,"endColumn":31},{"ruleId":"63","severity":1,"message":"76","line":76,"column":8,"nodeType":"67","endLine":76,"endColumn":15,"suggestions":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'bg' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'location.state'. Either include it or remove the dependency array.","ArrayExpression",["80"],["81"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has a missing dependency: 'renderElement'. Either include it or remove the dependency array.",["82"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},{"desc":"83","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [location.state]",{"range":"88","text":"89"},{"range":"90","text":"89"},"Update the dependencies array to be: [query, renderElement]",{"range":"91","text":"92"},[2032,2034],"[location.state]",[2640,2642],[2664,2671],"[query, renderElement]"]