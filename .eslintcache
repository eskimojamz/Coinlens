[{"/Users/jameskim/Documents/GitHub/Coinlens/src/index.js":"1","/Users/jameskim/Documents/GitHub/Coinlens/src/App.js":"2","/Users/jameskim/Documents/GitHub/Coinlens/src/routes/About.js":"3","/Users/jameskim/Documents/GitHub/Coinlens/src/routes/Home.js":"4","/Users/jameskim/Documents/GitHub/Coinlens/src/routes/CoinDetail.js":"5","/Users/jameskim/Documents/GitHub/Coinlens/src/components/Navbar.js":"6","/Users/jameskim/Documents/GitHub/Coinlens/src/components/Coins.js":"7","/Users/jameskim/Documents/GitHub/Coinlens/src/components/Searchbar.js":"8"},{"size":206,"mtime":1609385899026,"results":"9","hashOfConfig":"10"},{"size":654,"mtime":1610252413673,"results":"11","hashOfConfig":"10"},{"size":804,"mtime":1609920592648,"results":"12","hashOfConfig":"10"},{"size":2754,"mtime":1610257413633,"results":"13","hashOfConfig":"10"},{"size":4360,"mtime":1610184822057,"results":"14","hashOfConfig":"10"},{"size":1166,"mtime":1610015729857,"results":"15","hashOfConfig":"10"},{"size":2622,"mtime":1610257429910,"results":"16","hashOfConfig":"10"},{"size":1745,"mtime":1610257294560,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"15868xt",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jameskim/Documents/GitHub/Coinlens/src/index.js",[],["36","37"],"/Users/jameskim/Documents/GitHub/Coinlens/src/App.js",["38"],"/Users/jameskim/Documents/GitHub/Coinlens/src/routes/About.js",[],"/Users/jameskim/Documents/GitHub/Coinlens/src/routes/Home.js",["39","40","41","42"],"/Users/jameskim/Documents/GitHub/Coinlens/src/routes/CoinDetail.js",["43","44","45"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Line } from 'react-chartjs-2';\n\nconst options = {\n    legend: {\n        display: false\n    },\n    tooltips: {\n        mode: \"index\",\n        intersect: false,\n        backgroundColor: 'grey'\n    },\n    scales: {\n        xAxes: [\n            {\n            type: \"time\",\n            time: {\n                parser: \"MM/DD/YY\",\n                tooltipFormat: \"ll\",\n                displayFormats: {\n                    month: \"M-YY\"\n                }\n            },\n            },\n        ],\n        yAxes: [\n            {\n            gridLines: {\n                display: false,\n            },\n            ticks: {\n                beginAtZero: true,\n                // Include a dollar sign in the ticks\n                callback: function (value, index, values) {\n                return '$' + value\n                },\n            },\n            },\n        ],\n    }\n}\nconst CoinDetail = ({location}) => {\n    //const [state] = useState(location.state)\n    console.log(location)\n    const [data, setData] = useState({})\n    const fetchData = async () => {\n        return ((location.state !== undefined) &&\n        await axios.get(`https://api.coingecko.com/api/v3/coins/${location.state.id}/market_chart?vs_currency=usd&days=180`)\n            .then ( response => {\n                let chartData = []\n                for ( let dataObj of response.data.prices ) {\n                    let newChartData = {\n                        x: dataObj[0],\n                        y: parseFloat(dataObj[1]).toFixed(2)\n                    }\n                    chartData.push(newChartData)\n                }\n                setData(chartData)\n            }));\n    }\n    useEffect(fetchData, [])\n        return ((location.state !== undefined) &&\n                <div className='card text-center'>\n                    <img src={location.state.image} className='detail-img card-img-top mx-auto mt-3 mb-1'/>\n                    <div className=\"card-body\">     \n                        <h1 className='card-title'>{location.state.symbol.toUpperCase()}</h1>\n                        <h1 className='card-title'>{location.state.name}</h1>\n                        <h4>#{location.state.rank}</h4>\n                        <ul className=\"list-group list-group-flush\">\n                            <li className='list-group-item'>\n                                <small>Current Price</small>\n                                <h5>$ {location.state.price.toFixed(2)}</h5>\n                            </li>\n                            <li className='list-group-item'>\n                                <small>24h</small>\n                                <h5>{parseFloat(location.state.change24h).toFixed(2)}%</h5>\n                            </li>\n                            <li className='list-group-item'>\n                                <small>Marketcap Total</small>\n                                <h5>$ {(location.state.cap/1000000000).toFixed(2)}B</h5>\n                            </li>\n                        </ul>\n                            <li className='list-group-item'>\n                                {data?.length > 0 && (\n                                <Line \n                                    data={{ \n                                        datasets: [\n                                            {\n                                                label: 'Price',\n                                                backgroundColor: 'rgba(21, 61, 239, 0.78)',\n                                                borderColor: 'rgba(21, 61, 239, 1)',\n                                                pointRadius: 0,\n                                                data: data\n                                            }\n                                        ] \n                                    }}\n                                    options={ options }\n                                />\n                                )}\n                            </li>\n                            <li className='list-group-item list-group-item-light'>\n                                <small>Last updated: {location.state.updated.slice(0,10)} {location.state.updated.slice(11,19)}</small>\n                            </li>\n                    </div>\n                </div>\n        )\n}\n\nexport default CoinDetail\n","/Users/jameskim/Documents/GitHub/Coinlens/src/components/Navbar.js",[],"/Users/jameskim/Documents/GitHub/Coinlens/src/components/Coins.js",["46"],"/Users/jameskim/Documents/GitHub/Coinlens/src/components/Searchbar.js",["47","48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":3,"column":8,"nodeType":"55","messageId":"56","endLine":3,"endColumn":12},{"ruleId":"53","severity":1,"message":"57","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":17},{"ruleId":"58","severity":1,"message":"59","line":30,"column":32,"nodeType":"60","messageId":"61","endLine":30,"endColumn":34},{"ruleId":"58","severity":1,"message":"59","line":31,"column":29,"nodeType":"60","messageId":"61","endLine":31,"endColumn":31},{"ruleId":"62","severity":1,"message":"63","line":76,"column":8,"nodeType":"64","endLine":76,"endColumn":15,"suggestions":"65"},{"ruleId":"62","severity":1,"message":"66","line":47,"column":23,"nodeType":"60","endLine":61,"endColumn":6},{"ruleId":"62","severity":1,"message":"67","line":62,"column":26,"nodeType":"64","endLine":62,"endColumn":28,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":65,"column":21,"nodeType":"71","endLine":65,"endColumn":108},{"ruleId":"69","severity":1,"message":"70","line":9,"column":13,"nodeType":"71","endLine":9,"endColumn":53},{"ruleId":"53","severity":1,"message":"72","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":14},{"ruleId":"58","severity":1,"message":"59","line":15,"column":28,"nodeType":"60","messageId":"61","endLine":15,"endColumn":30},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'SearchBar' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'renderElement'. Either include it or remove the dependency array.","ArrayExpression",["75"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'location.state'. Either include it or remove the dependency array.",["76"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"Update the dependencies array to be: [query, renderElement]",{"range":"81","text":"82"},"Update the dependencies array to be: [location.state]",{"range":"83","text":"84"},[2667,2674],"[query, renderElement]",[1757,1759],"[location.state]"]