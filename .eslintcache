[{"/Users/jameskim/Documents/GitHub/Coinlens/src/index.js":"1","/Users/jameskim/Documents/GitHub/Coinlens/src/App.js":"2","/Users/jameskim/Documents/GitHub/Coinlens/src/routes/About.js":"3","/Users/jameskim/Documents/GitHub/Coinlens/src/routes/Home.js":"4","/Users/jameskim/Documents/GitHub/Coinlens/src/routes/CoinDetail.js":"5","/Users/jameskim/Documents/GitHub/Coinlens/src/components/Navbar.js":"6","/Users/jameskim/Documents/GitHub/Coinlens/src/components/Coins.js":"7"},{"size":206,"mtime":1609385899026,"results":"8","hashOfConfig":"9"},{"size":590,"mtime":1609835321631,"results":"10","hashOfConfig":"9"},{"size":0,"mtime":1609471972799,"results":"11","hashOfConfig":"9"},{"size":1782,"mtime":1609835122012,"results":"12","hashOfConfig":"9"},{"size":2460,"mtime":1609837092702,"results":"13","hashOfConfig":"9"},{"size":1325,"mtime":1609837092699,"results":"14","hashOfConfig":"9"},{"size":2548,"mtime":1609836885753,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15868xt",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jameskim/Documents/GitHub/Coinlens/src/index.js",[],"/Users/jameskim/Documents/GitHub/Coinlens/src/App.js",[],"/Users/jameskim/Documents/GitHub/Coinlens/src/routes/About.js",[],"/Users/jameskim/Documents/GitHub/Coinlens/src/routes/Home.js",[],"/Users/jameskim/Documents/GitHub/Coinlens/src/routes/CoinDetail.js",["31"],"import React from 'react'\n//import MarketChart from '../components/Chart'\nimport axios from 'axios'\nimport { Line } from 'react-chartjs-2';\n\nlet chartData = {\n    labels: [],\n    datasets: [\n        {\n            label: 'Price',\n            data: [],\n            backgroundColor: 'rgba(21, 61, 239, 0.78)',\n            borderColor: 'rgba(21, 61, 239, 1)',\n            pointRadius: 0\n        }\n    ]\n}\nlet options = {\n    legend: {\n        display: false\n    },\n    tooltips: {\n        mode: \"index\",\n        intersect: false,\n        backgroundColor: 'grey'\n    },\n    scales: {\n        xAxes: [\n            {\n            type: \"time\",\n            time: {\n                parser: \"MM/DD/YY\",\n                tooltipFormat: \"ll\",\n                displayFormats: {\n                    month: \"MMM-YY\"\n                }\n            },\n            },\n        ],\n        yAxes: [\n            {\n            gridLines: {\n                display: false,\n            },\n            ticks: {\n                beginAtZero: true,\n                // Include a dollar sign in the ticks\n                callback: function (value, index, values) {\n                return '$' + value\n                },\n            },\n            },\n        ],\n    }\n}\n\nclass CoinDetail extends React.Component {\n    \n    componentDidMount() {\n        const { location } = this.props\n        const fetchData = async () => {\n            await axios.get(`https://api.coingecko.com/api/v3/coins/${location.state.id}/market_chart?vs_currency=usd&days=180`)\n                .then ( response => {\n                    for ( let dataObj of response.data.prices ) {\n                        chartData.datasets[0].data.push(parseFloat(dataObj[1]));\n                        chartData.labels.push(dataObj[0])\n                    }\n                });\n        }\n        fetchData();\n\n    }\n    render() {\n        const { location } = this.props\n        return (\n            <div>\n                <h1>{location.state.name}</h1>\n                <h1>{location.state.symbol}</h1>\n                <h1>{location.state.high}</h1>\n                <h1>{location.state.low}</h1>\n                <h1>Last updated: {location.state.updated.slice(0,10)} {location.state.updated.slice(11,19)}</h1>\n                {console.log(chartData)}\n                <Line \n                    data={ chartData }\n                    options={ options }\n                />\n            </div>\n        )\n    }\n}\n\nexport default CoinDetail\n","/Users/jameskim/Documents/GitHub/Coinlens/src/components/Navbar.js",["32","33"],"/Users/jameskim/Documents/GitHub/Coinlens/src/components/Coins.js",["34"],{"ruleId":"35","severity":1,"message":"36","line":63,"column":21,"nodeType":"37","endLine":63,"endColumn":92},{"ruleId":"38","severity":1,"message":"39","line":8,"column":17,"nodeType":"37","endLine":8,"endColumn":54},{"ruleId":"38","severity":1,"message":"39","line":16,"column":29,"nodeType":"37","endLine":16,"endColumn":69},{"ruleId":"35","severity":1,"message":"36","line":9,"column":13,"nodeType":"37","endLine":9,"endColumn":32},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md"]